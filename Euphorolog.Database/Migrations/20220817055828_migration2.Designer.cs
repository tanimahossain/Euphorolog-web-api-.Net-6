// <auto-generated />
using System;
using Euphorolog.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Euphorolog.Database.Migrations
{
    [DbContext(typeof(EuphorologContext))]
    [Migration("20220817055828_migration2")]
    partial class migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Euphorolog.Database.Models.Stories", b =>
                {
                    b.Property<string>("storyId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("authorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(55)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("openingLines")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("storyDescription")
                        .IsRequired()
                        .HasMaxLength(10005)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("storyNo")
                        .HasMaxLength(150)
                        .HasColumnType("int");

                    b.Property<string>("storyTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("storyId");

                    b.HasIndex("authorName");

                    b.ToTable("stories");
                });

            modelBuilder.Entity("Euphorolog.Database.Models.Users", b =>
                {
                    b.Property<string>("userName")
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("eMail")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("passChangedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("passwordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("userName");

                    b.HasIndex("eMail")
                        .IsUnique();

                    b.HasIndex("userName")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("Euphorolog.Database.Models.Stories", b =>
                {
                    b.HasOne("Euphorolog.Database.Models.Users", "users")
                        .WithMany("stories")
                        .HasForeignKey("authorName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("Euphorolog.Database.Models.Users", b =>
                {
                    b.Navigation("stories");
                });
#pragma warning restore 612, 618
        }
    }
}
